"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
from builtins import (
    bool,
    bytes,
    int,
)

from google.protobuf.descriptor import (
    Descriptor,
    FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer,
    RepeatedScalarFieldContainer,
)

from google.protobuf.message import (
    Message,
)

from typing import (
    Iterable,
    Optional,
    Text,
)

from typing_extensions import (
    Literal,
)


DESCRIPTOR: FileDescriptor

class DelImgReq(Message):
    DESCRIPTOR: Descriptor
    SRCUIN_FIELD_NUMBER: int
    DSTUIN_FIELD_NUMBER: int
    REQTERM_FIELD_NUMBER: int
    REQPLATFORMTYPE_FIELD_NUMBER: int
    BUTYPE_FIELD_NUMBER: int
    BUILDVER_FIELD_NUMBER: int
    FILERESID_FIELD_NUMBER: int
    PICWIDTH_FIELD_NUMBER: int
    PICHEIGHT_FIELD_NUMBER: int
    srcUin: int
    dstUin: int
    reqTerm: int
    reqPlatformType: int
    buType: int
    buildVer: bytes
    fileResid: bytes
    picWidth: int
    picHeight: int
    def __init__(self,
        *,
        srcUin: Optional[int] = ...,
        dstUin: Optional[int] = ...,
        reqTerm: Optional[int] = ...,
        reqPlatformType: Optional[int] = ...,
        buType: Optional[int] = ...,
        buildVer: Optional[bytes] = ...,
        fileResid: Optional[bytes] = ...,
        picWidth: Optional[int] = ...,
        picHeight: Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["buType",b"buType","buildVer",b"buildVer","dstUin",b"dstUin","fileResid",b"fileResid","picHeight",b"picHeight","picWidth",b"picWidth","reqPlatformType",b"reqPlatformType","reqTerm",b"reqTerm","srcUin",b"srcUin"]) -> bool: ...
    def ClearField(self, field_name: Literal["buType",b"buType","buildVer",b"buildVer","dstUin",b"dstUin","fileResid",b"fileResid","picHeight",b"picHeight","picWidth",b"picWidth","reqPlatformType",b"reqPlatformType","reqTerm",b"reqTerm","srcUin",b"srcUin"]) -> None: ...

class DelImgRsp(Message):
    DESCRIPTOR: Descriptor
    RESULT_FIELD_NUMBER: int
    FAILMSG_FIELD_NUMBER: int
    FILERESID_FIELD_NUMBER: int
    result: int
    failMsg: bytes
    fileResid: bytes
    def __init__(self,
        *,
        result: Optional[int] = ...,
        failMsg: Optional[bytes] = ...,
        fileResid: Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["failMsg",b"failMsg","fileResid",b"fileResid","result",b"result"]) -> bool: ...
    def ClearField(self, field_name: Literal["failMsg",b"failMsg","fileResid",b"fileResid","result",b"result"]) -> None: ...

class ExpRoamExtendInfo(Message):
    DESCRIPTOR: Descriptor
    RESID_FIELD_NUMBER: int
    resid: bytes
    def __init__(self,
        *,
        resid: Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["resid",b"resid"]) -> bool: ...
    def ClearField(self, field_name: Literal["resid",b"resid"]) -> None: ...

class ExpRoamPicInfo(Message):
    DESCRIPTOR: Descriptor
    SHOPFLAG_FIELD_NUMBER: int
    PKGID_FIELD_NUMBER: int
    PICID_FIELD_NUMBER: int
    shopFlag: int
    pkgId: int
    picId: bytes
    def __init__(self,
        *,
        shopFlag: Optional[int] = ...,
        pkgId: Optional[int] = ...,
        picId: Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["picId",b"picId","pkgId",b"pkgId","shopFlag",b"shopFlag"]) -> bool: ...
    def ClearField(self, field_name: Literal["picId",b"picId","pkgId",b"pkgId","shopFlag",b"shopFlag"]) -> None: ...

class ExtensionCommPicTryUp(Message):
    DESCRIPTOR: Descriptor
    EXTINFO_FIELD_NUMBER: int
    @property
    def extinfo(self) -> RepeatedScalarFieldContainer[bytes]: ...
    def __init__(self,
        *,
        extinfo: Optional[Iterable[bytes]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: Literal["extinfo",b"extinfo"]) -> None: ...

class ExtensionExpRoamTryUp(Message):
    DESCRIPTOR: Descriptor
    EXPROAMPICINFO_FIELD_NUMBER: int
    @property
    def exproamPicInfo(self) -> RepeatedCompositeFieldContainer[ExpRoamPicInfo]: ...
    def __init__(self,
        *,
        exproamPicInfo: Optional[Iterable[ExpRoamPicInfo]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: Literal["exproamPicInfo",b"exproamPicInfo"]) -> None: ...

class GetImgUrlReq(Message):
    DESCRIPTOR: Descriptor
    GROUPCODE_FIELD_NUMBER: int
    DSTUIN_FIELD_NUMBER: int
    FILEID_FIELD_NUMBER: int
    FILEMD5_FIELD_NUMBER: int
    URLFLAG_FIELD_NUMBER: int
    URLTYPE_FIELD_NUMBER: int
    REQTERM_FIELD_NUMBER: int
    REQPLATFORMTYPE_FIELD_NUMBER: int
    INNERIP_FIELD_NUMBER: int
    BUTYPE_FIELD_NUMBER: int
    BUILDVER_FIELD_NUMBER: int
    FILEID_FIELD_NUMBER: int
    FILESIZE_FIELD_NUMBER: int
    ORIGINALPIC_FIELD_NUMBER: int
    RETRYREQ_FIELD_NUMBER: int
    FILEHEIGHT_FIELD_NUMBER: int
    FILEWIDTH_FIELD_NUMBER: int
    PICTYPE_FIELD_NUMBER: int
    PICUPTIMESTAMP_FIELD_NUMBER: int
    REQTRANSFERTYPE_FIELD_NUMBER: int
    QQMEETGUILDID_FIELD_NUMBER: int
    QQMEETCHANNELID_FIELD_NUMBER: int
    DOWNLOADINDEX_FIELD_NUMBER: int
    groupCode: int
    dstUin: int
    fileid: int
    fileMd5: bytes
    urlFlag: int
    urlType: int
    reqTerm: int
    reqPlatformType: int
    innerIp: int
    buType: int
    buildVer: bytes
    fileId: int
    fileSize: int
    originalPic: int
    retryReq: int
    fileHeight: int
    fileWidth: int
    picType: int
    picUpTimestamp: int
    reqTransferType: int
    qqmeetGuildId: int
    qqmeetChannelId: int
    downloadIndex: bytes
    def __init__(self,
        *,
        groupCode: Optional[int] = ...,
        dstUin: Optional[int] = ...,
        fileid: Optional[int] = ...,
        fileMd5: Optional[bytes] = ...,
        urlFlag: Optional[int] = ...,
        urlType: Optional[int] = ...,
        reqTerm: Optional[int] = ...,
        reqPlatformType: Optional[int] = ...,
        innerIp: Optional[int] = ...,
        buType: Optional[int] = ...,
        buildVer: Optional[bytes] = ...,
        fileId: Optional[int] = ...,
        fileSize: Optional[int] = ...,
        originalPic: Optional[int] = ...,
        retryReq: Optional[int] = ...,
        fileHeight: Optional[int] = ...,
        fileWidth: Optional[int] = ...,
        picType: Optional[int] = ...,
        picUpTimestamp: Optional[int] = ...,
        reqTransferType: Optional[int] = ...,
        qqmeetGuildId: Optional[int] = ...,
        qqmeetChannelId: Optional[int] = ...,
        downloadIndex: Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["buType",b"buType","buildVer",b"buildVer","downloadIndex",b"downloadIndex","dstUin",b"dstUin","fileHeight",b"fileHeight","fileId",b"fileId","fileMd5",b"fileMd5","fileSize",b"fileSize","fileWidth",b"fileWidth","fileid",b"fileid","groupCode",b"groupCode","innerIp",b"innerIp","originalPic",b"originalPic","picType",b"picType","picUpTimestamp",b"picUpTimestamp","qqmeetChannelId",b"qqmeetChannelId","qqmeetGuildId",b"qqmeetGuildId","reqPlatformType",b"reqPlatformType","reqTerm",b"reqTerm","reqTransferType",b"reqTransferType","retryReq",b"retryReq","urlFlag",b"urlFlag","urlType",b"urlType"]) -> bool: ...
    def ClearField(self, field_name: Literal["buType",b"buType","buildVer",b"buildVer","downloadIndex",b"downloadIndex","dstUin",b"dstUin","fileHeight",b"fileHeight","fileId",b"fileId","fileMd5",b"fileMd5","fileSize",b"fileSize","fileWidth",b"fileWidth","fileid",b"fileid","groupCode",b"groupCode","innerIp",b"innerIp","originalPic",b"originalPic","picType",b"picType","picUpTimestamp",b"picUpTimestamp","qqmeetChannelId",b"qqmeetChannelId","qqmeetGuildId",b"qqmeetGuildId","reqPlatformType",b"reqPlatformType","reqTerm",b"reqTerm","reqTransferType",b"reqTransferType","retryReq",b"retryReq","urlFlag",b"urlFlag","urlType",b"urlType"]) -> None: ...

class GetImgUrlRsp(Message):
    DESCRIPTOR: Descriptor
    FILEID_FIELD_NUMBER: int
    FILEMD5_FIELD_NUMBER: int
    RESULT_FIELD_NUMBER: int
    FAILMSG_FIELD_NUMBER: int
    IMGINFO_FIELD_NUMBER: int
    THUMBDOWNURL_FIELD_NUMBER: int
    ORIGINALDOWNURL_FIELD_NUMBER: int
    BIGDOWNURL_FIELD_NUMBER: int
    DOWNIP_FIELD_NUMBER: int
    DOWNPORT_FIELD_NUMBER: int
    DOWNDOMAIN_FIELD_NUMBER: int
    THUMBDOWNPARA_FIELD_NUMBER: int
    ORIGINALDOWNPARA_FIELD_NUMBER: int
    BIGDOWNPARA_FIELD_NUMBER: int
    FILEID_FIELD_NUMBER: int
    AUTODOWNTYPE_FIELD_NUMBER: int
    ORDERDOWNTYPE_FIELD_NUMBER: int
    BIGTHUMBDOWNPARA_FIELD_NUMBER: int
    HTTPSURLFLAG_FIELD_NUMBER: int
    DOWNIP6_FIELD_NUMBER: int
    CLIENTIP6_FIELD_NUMBER: int
    fileid: int
    fileMd5: bytes
    result: int
    failMsg: bytes
    @property
    def imgInfo(self) -> ImgInfo: ...
    @property
    def thumbDownUrl(self) -> RepeatedScalarFieldContainer[bytes]: ...
    @property
    def originalDownUrl(self) -> RepeatedScalarFieldContainer[bytes]: ...
    @property
    def bigDownUrl(self) -> RepeatedScalarFieldContainer[bytes]: ...
    @property
    def downIp(self) -> RepeatedScalarFieldContainer[int]: ...
    @property
    def downPort(self) -> RepeatedScalarFieldContainer[int]: ...
    downDomain: bytes
    thumbDownPara: bytes
    originalDownPara: bytes
    bigDownPara: bytes
    fileId: int
    autoDownType: int
    @property
    def orderDownType(self) -> RepeatedScalarFieldContainer[int]: ...
    bigThumbDownPara: bytes
    httpsUrlFlag: int
    @property
    def downIp6(self) -> RepeatedCompositeFieldContainer[IPv6Info]: ...
    clientIp6: bytes
    def __init__(self,
        *,
        fileid: Optional[int] = ...,
        fileMd5: Optional[bytes] = ...,
        result: Optional[int] = ...,
        failMsg: Optional[bytes] = ...,
        imgInfo: Optional[ImgInfo] = ...,
        thumbDownUrl: Optional[Iterable[bytes]] = ...,
        originalDownUrl: Optional[Iterable[bytes]] = ...,
        bigDownUrl: Optional[Iterable[bytes]] = ...,
        downIp: Optional[Iterable[int]] = ...,
        downPort: Optional[Iterable[int]] = ...,
        downDomain: Optional[bytes] = ...,
        thumbDownPara: Optional[bytes] = ...,
        originalDownPara: Optional[bytes] = ...,
        bigDownPara: Optional[bytes] = ...,
        fileId: Optional[int] = ...,
        autoDownType: Optional[int] = ...,
        orderDownType: Optional[Iterable[int]] = ...,
        bigThumbDownPara: Optional[bytes] = ...,
        httpsUrlFlag: Optional[int] = ...,
        downIp6: Optional[Iterable[IPv6Info]] = ...,
        clientIp6: Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["autoDownType",b"autoDownType","bigDownPara",b"bigDownPara","bigThumbDownPara",b"bigThumbDownPara","clientIp6",b"clientIp6","downDomain",b"downDomain","failMsg",b"failMsg","fileId",b"fileId","fileMd5",b"fileMd5","fileid",b"fileid","httpsUrlFlag",b"httpsUrlFlag","imgInfo",b"imgInfo","originalDownPara",b"originalDownPara","result",b"result","thumbDownPara",b"thumbDownPara"]) -> bool: ...
    def ClearField(self, field_name: Literal["autoDownType",b"autoDownType","bigDownPara",b"bigDownPara","bigDownUrl",b"bigDownUrl","bigThumbDownPara",b"bigThumbDownPara","clientIp6",b"clientIp6","downDomain",b"downDomain","downIp",b"downIp","downIp6",b"downIp6","downPort",b"downPort","failMsg",b"failMsg","fileId",b"fileId","fileMd5",b"fileMd5","fileid",b"fileid","httpsUrlFlag",b"httpsUrlFlag","imgInfo",b"imgInfo","orderDownType",b"orderDownType","originalDownPara",b"originalDownPara","originalDownUrl",b"originalDownUrl","result",b"result","thumbDownPara",b"thumbDownPara","thumbDownUrl",b"thumbDownUrl"]) -> None: ...

class GetPttUrlReq(Message):
    DESCRIPTOR: Descriptor
    GROUPCODE_FIELD_NUMBER: int
    DSTUIN_FIELD_NUMBER: int
    FILEID_FIELD_NUMBER: int
    FILEMD5_FIELD_NUMBER: int
    REQTERM_FIELD_NUMBER: int
    REQPLATFORMTYPE_FIELD_NUMBER: int
    INNERIP_FIELD_NUMBER: int
    BUTYPE_FIELD_NUMBER: int
    BUILDVER_FIELD_NUMBER: int
    FILEID_FIELD_NUMBER: int
    FILEKEY_FIELD_NUMBER: int
    CODEC_FIELD_NUMBER: int
    BUID_FIELD_NUMBER: int
    REQTRANSFERTYPE_FIELD_NUMBER: int
    ISAUTO_FIELD_NUMBER: int
    groupCode: int
    dstUin: int
    fileid: int
    fileMd5: bytes
    reqTerm: int
    reqPlatformType: int
    innerIp: int
    buType: int
    buildVer: bytes
    fileId: int
    fileKey: bytes
    codec: int
    buId: int
    reqTransferType: int
    isAuto: int
    def __init__(self,
        *,
        groupCode: Optional[int] = ...,
        dstUin: Optional[int] = ...,
        fileid: Optional[int] = ...,
        fileMd5: Optional[bytes] = ...,
        reqTerm: Optional[int] = ...,
        reqPlatformType: Optional[int] = ...,
        innerIp: Optional[int] = ...,
        buType: Optional[int] = ...,
        buildVer: Optional[bytes] = ...,
        fileId: Optional[int] = ...,
        fileKey: Optional[bytes] = ...,
        codec: Optional[int] = ...,
        buId: Optional[int] = ...,
        reqTransferType: Optional[int] = ...,
        isAuto: Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["buId",b"buId","buType",b"buType","buildVer",b"buildVer","codec",b"codec","dstUin",b"dstUin","fileId",b"fileId","fileKey",b"fileKey","fileMd5",b"fileMd5","fileid",b"fileid","groupCode",b"groupCode","innerIp",b"innerIp","isAuto",b"isAuto","reqPlatformType",b"reqPlatformType","reqTerm",b"reqTerm","reqTransferType",b"reqTransferType"]) -> bool: ...
    def ClearField(self, field_name: Literal["buId",b"buId","buType",b"buType","buildVer",b"buildVer","codec",b"codec","dstUin",b"dstUin","fileId",b"fileId","fileKey",b"fileKey","fileMd5",b"fileMd5","fileid",b"fileid","groupCode",b"groupCode","innerIp",b"innerIp","isAuto",b"isAuto","reqPlatformType",b"reqPlatformType","reqTerm",b"reqTerm","reqTransferType",b"reqTransferType"]) -> None: ...

class GetPttUrlRsp(Message):
    DESCRIPTOR: Descriptor
    FILEID_FIELD_NUMBER: int
    FILEMD5_FIELD_NUMBER: int
    RESULT_FIELD_NUMBER: int
    FAILMSG_FIELD_NUMBER: int
    DOWNURL_FIELD_NUMBER: int
    DOWNIP_FIELD_NUMBER: int
    DOWNPORT_FIELD_NUMBER: int
    DOWNDOMAIN_FIELD_NUMBER: int
    DOWNPARA_FIELD_NUMBER: int
    FILEID_FIELD_NUMBER: int
    TRANSFERTYPE_FIELD_NUMBER: int
    ALLOWRETRY_FIELD_NUMBER: int
    DOWNIP6_FIELD_NUMBER: int
    CLIENTIP6_FIELD_NUMBER: int
    DOMAIN_FIELD_NUMBER: int
    fileid: int
    fileMd5: bytes
    result: int
    failMsg: bytes
    @property
    def downUrl(self) -> RepeatedScalarFieldContainer[bytes]: ...
    @property
    def downIp(self) -> RepeatedScalarFieldContainer[int]: ...
    @property
    def downPort(self) -> RepeatedScalarFieldContainer[int]: ...
    downDomain: bytes
    downPara: bytes
    fileId: int
    transferType: int
    allowRetry: int
    @property
    def downIp6(self) -> RepeatedCompositeFieldContainer[IPv6Info]: ...
    clientIp6: bytes
    domain: Text
    def __init__(self,
        *,
        fileid: Optional[int] = ...,
        fileMd5: Optional[bytes] = ...,
        result: Optional[int] = ...,
        failMsg: Optional[bytes] = ...,
        downUrl: Optional[Iterable[bytes]] = ...,
        downIp: Optional[Iterable[int]] = ...,
        downPort: Optional[Iterable[int]] = ...,
        downDomain: Optional[bytes] = ...,
        downPara: Optional[bytes] = ...,
        fileId: Optional[int] = ...,
        transferType: Optional[int] = ...,
        allowRetry: Optional[int] = ...,
        downIp6: Optional[Iterable[IPv6Info]] = ...,
        clientIp6: Optional[bytes] = ...,
        domain: Optional[Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["allowRetry",b"allowRetry","clientIp6",b"clientIp6","domain",b"domain","downDomain",b"downDomain","downPara",b"downPara","failMsg",b"failMsg","fileId",b"fileId","fileMd5",b"fileMd5","fileid",b"fileid","result",b"result","transferType",b"transferType"]) -> bool: ...
    def ClearField(self, field_name: Literal["allowRetry",b"allowRetry","clientIp6",b"clientIp6","domain",b"domain","downDomain",b"downDomain","downIp",b"downIp","downIp6",b"downIp6","downPara",b"downPara","downPort",b"downPort","downUrl",b"downUrl","failMsg",b"failMsg","fileId",b"fileId","fileMd5",b"fileMd5","fileid",b"fileid","result",b"result","transferType",b"transferType"]) -> None: ...

class IPv6Info(Message):
    DESCRIPTOR: Descriptor
    IP6_FIELD_NUMBER: int
    PORT_FIELD_NUMBER: int
    ip6: bytes
    port: int
    def __init__(self,
        *,
        ip6: Optional[bytes] = ...,
        port: Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["ip6",b"ip6","port",b"port"]) -> bool: ...
    def ClearField(self, field_name: Literal["ip6",b"ip6","port",b"port"]) -> None: ...

class ImgInfo(Message):
    DESCRIPTOR: Descriptor
    FILEMD5_FIELD_NUMBER: int
    FILETYPE_FIELD_NUMBER: int
    FILESIZE_FIELD_NUMBER: int
    FILEWIDTH_FIELD_NUMBER: int
    FILEHEIGHT_FIELD_NUMBER: int
    fileMd5: bytes
    fileType: int
    fileSize: int
    fileWidth: int
    fileHeight: int
    def __init__(self,
        *,
        fileMd5: Optional[bytes] = ...,
        fileType: Optional[int] = ...,
        fileSize: Optional[int] = ...,
        fileWidth: Optional[int] = ...,
        fileHeight: Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["fileHeight",b"fileHeight","fileMd5",b"fileMd5","fileSize",b"fileSize","fileType",b"fileType","fileWidth",b"fileWidth"]) -> bool: ...
    def ClearField(self, field_name: Literal["fileHeight",b"fileHeight","fileMd5",b"fileMd5","fileSize",b"fileSize","fileType",b"fileType","fileWidth",b"fileWidth"]) -> None: ...

class PicSize(Message):
    DESCRIPTOR: Descriptor
    ORIGINAL_FIELD_NUMBER: int
    THUMB_FIELD_NUMBER: int
    HIGH_FIELD_NUMBER: int
    original: int
    thumb: int
    high: int
    def __init__(self,
        *,
        original: Optional[int] = ...,
        thumb: Optional[int] = ...,
        high: Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["high",b"high","original",b"original","thumb",b"thumb"]) -> bool: ...
    def ClearField(self, field_name: Literal["high",b"high","original",b"original","thumb",b"thumb"]) -> None: ...

class D388ReqBody(Message):
    DESCRIPTOR: Descriptor
    NETTYPE_FIELD_NUMBER: int
    SUBCMD_FIELD_NUMBER: int
    TRYUPIMGREQ_FIELD_NUMBER: int
    GETIMGURLREQ_FIELD_NUMBER: int
    TRYUPPTTREQ_FIELD_NUMBER: int
    GETPTTURLREQ_FIELD_NUMBER: int
    COMMANDID_FIELD_NUMBER: int
    DELIMGREQ_FIELD_NUMBER: int
    EXTENSION_FIELD_NUMBER: int
    netType: int
    subcmd: int
    @property
    def tryupImgReq(self) -> RepeatedCompositeFieldContainer[TryUpImgReq]: ...
    @property
    def getimgUrlReq(self) -> RepeatedCompositeFieldContainer[GetImgUrlReq]: ...
    @property
    def tryupPttReq(self) -> RepeatedCompositeFieldContainer[TryUpPttReq]: ...
    @property
    def getpttUrlReq(self) -> RepeatedCompositeFieldContainer[GetPttUrlReq]: ...
    commandId: int
    @property
    def delImgReq(self) -> RepeatedCompositeFieldContainer[DelImgReq]: ...
    extension: bytes
    def __init__(self,
        *,
        netType: Optional[int] = ...,
        subcmd: Optional[int] = ...,
        tryupImgReq: Optional[Iterable[TryUpImgReq]] = ...,
        getimgUrlReq: Optional[Iterable[GetImgUrlReq]] = ...,
        tryupPttReq: Optional[Iterable[TryUpPttReq]] = ...,
        getpttUrlReq: Optional[Iterable[GetPttUrlReq]] = ...,
        commandId: Optional[int] = ...,
        delImgReq: Optional[Iterable[DelImgReq]] = ...,
        extension: Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["commandId",b"commandId","extension",b"extension","netType",b"netType","subcmd",b"subcmd"]) -> bool: ...
    def ClearField(self, field_name: Literal["commandId",b"commandId","delImgReq",b"delImgReq","extension",b"extension","getimgUrlReq",b"getimgUrlReq","getpttUrlReq",b"getpttUrlReq","netType",b"netType","subcmd",b"subcmd","tryupImgReq",b"tryupImgReq","tryupPttReq",b"tryupPttReq"]) -> None: ...

class D388RspBody(Message):
    DESCRIPTOR: Descriptor
    CLIENTIP_FIELD_NUMBER: int
    SUBCMD_FIELD_NUMBER: int
    TRYUPIMGRSP_FIELD_NUMBER: int
    GETIMGURLRSP_FIELD_NUMBER: int
    TRYUPPTTRSP_FIELD_NUMBER: int
    GETPTTURLRSP_FIELD_NUMBER: int
    DELIMGRSP_FIELD_NUMBER: int
    clientIp: int
    subcmd: int
    @property
    def tryupImgRsp(self) -> RepeatedCompositeFieldContainer[D388TryUpImgRsp]: ...
    @property
    def getimgUrlRsp(self) -> RepeatedCompositeFieldContainer[GetImgUrlRsp]: ...
    @property
    def tryupPttRsp(self) -> RepeatedCompositeFieldContainer[TryUpPttRsp]: ...
    @property
    def getpttUrlRsp(self) -> RepeatedCompositeFieldContainer[GetPttUrlRsp]: ...
    @property
    def delImgRsp(self) -> RepeatedCompositeFieldContainer[DelImgRsp]: ...
    def __init__(self,
        *,
        clientIp: Optional[int] = ...,
        subcmd: Optional[int] = ...,
        tryupImgRsp: Optional[Iterable[D388TryUpImgRsp]] = ...,
        getimgUrlRsp: Optional[Iterable[GetImgUrlRsp]] = ...,
        tryupPttRsp: Optional[Iterable[TryUpPttRsp]] = ...,
        getpttUrlRsp: Optional[Iterable[GetPttUrlRsp]] = ...,
        delImgRsp: Optional[Iterable[DelImgRsp]] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["clientIp",b"clientIp","subcmd",b"subcmd"]) -> bool: ...
    def ClearField(self, field_name: Literal["clientIp",b"clientIp","delImgRsp",b"delImgRsp","getimgUrlRsp",b"getimgUrlRsp","getpttUrlRsp",b"getpttUrlRsp","subcmd",b"subcmd","tryupImgRsp",b"tryupImgRsp","tryupPttRsp",b"tryupPttRsp"]) -> None: ...

class TryUpImgReq(Message):
    DESCRIPTOR: Descriptor
    GROUPCODE_FIELD_NUMBER: int
    SRCUIN_FIELD_NUMBER: int
    FILEID_FIELD_NUMBER: int
    FILEMD5_FIELD_NUMBER: int
    FILESIZE_FIELD_NUMBER: int
    FILENAME_FIELD_NUMBER: int
    SRCTERM_FIELD_NUMBER: int
    PLATFORMTYPE_FIELD_NUMBER: int
    BUTYPE_FIELD_NUMBER: int
    PICWIDTH_FIELD_NUMBER: int
    PICHEIGHT_FIELD_NUMBER: int
    PICTYPE_FIELD_NUMBER: int
    BUILDVER_FIELD_NUMBER: int
    INNERIP_FIELD_NUMBER: int
    APPPICTYPE_FIELD_NUMBER: int
    ORIGINALPIC_FIELD_NUMBER: int
    FILEINDEX_FIELD_NUMBER: int
    DSTUIN_FIELD_NUMBER: int
    SRVUPLOAD_FIELD_NUMBER: int
    TRANSFERURL_FIELD_NUMBER: int
    QQMEETGUILDID_FIELD_NUMBER: int
    QQMEETCHANNELID_FIELD_NUMBER: int
    groupCode: int
    srcUin: int
    fileId: int
    fileMd5: bytes
    fileSize: int
    fileName: bytes
    srcTerm: int
    platformType: int
    buType: int
    picWidth: int
    picHeight: int
    picType: int
    buildVer: bytes
    innerIp: int
    appPicType: int
    originalPic: int
    fileIndex: bytes
    dstUin: int
    srvUpload: int
    transferUrl: bytes
    qqmeetGuildId: int
    qqmeetChannelId: int
    def __init__(self,
        *,
        groupCode: Optional[int] = ...,
        srcUin: Optional[int] = ...,
        fileId: Optional[int] = ...,
        fileMd5: Optional[bytes] = ...,
        fileSize: Optional[int] = ...,
        fileName: Optional[bytes] = ...,
        srcTerm: Optional[int] = ...,
        platformType: Optional[int] = ...,
        buType: Optional[int] = ...,
        picWidth: Optional[int] = ...,
        picHeight: Optional[int] = ...,
        picType: Optional[int] = ...,
        buildVer: Optional[bytes] = ...,
        innerIp: Optional[int] = ...,
        appPicType: Optional[int] = ...,
        originalPic: Optional[int] = ...,
        fileIndex: Optional[bytes] = ...,
        dstUin: Optional[int] = ...,
        srvUpload: Optional[int] = ...,
        transferUrl: Optional[bytes] = ...,
        qqmeetGuildId: Optional[int] = ...,
        qqmeetChannelId: Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["appPicType",b"appPicType","buType",b"buType","buildVer",b"buildVer","dstUin",b"dstUin","fileId",b"fileId","fileIndex",b"fileIndex","fileMd5",b"fileMd5","fileName",b"fileName","fileSize",b"fileSize","groupCode",b"groupCode","innerIp",b"innerIp","originalPic",b"originalPic","picHeight",b"picHeight","picType",b"picType","picWidth",b"picWidth","platformType",b"platformType","qqmeetChannelId",b"qqmeetChannelId","qqmeetGuildId",b"qqmeetGuildId","srcTerm",b"srcTerm","srcUin",b"srcUin","srvUpload",b"srvUpload","transferUrl",b"transferUrl"]) -> bool: ...
    def ClearField(self, field_name: Literal["appPicType",b"appPicType","buType",b"buType","buildVer",b"buildVer","dstUin",b"dstUin","fileId",b"fileId","fileIndex",b"fileIndex","fileMd5",b"fileMd5","fileName",b"fileName","fileSize",b"fileSize","groupCode",b"groupCode","innerIp",b"innerIp","originalPic",b"originalPic","picHeight",b"picHeight","picType",b"picType","picWidth",b"picWidth","platformType",b"platformType","qqmeetChannelId",b"qqmeetChannelId","qqmeetGuildId",b"qqmeetGuildId","srcTerm",b"srcTerm","srcUin",b"srcUin","srvUpload",b"srvUpload","transferUrl",b"transferUrl"]) -> None: ...

class D388TryUpImgRsp(Message):
    DESCRIPTOR: Descriptor
    FILEID_FIELD_NUMBER: int
    RESULT_FIELD_NUMBER: int
    FAILMSG_FIELD_NUMBER: int
    FILEEXIT_FIELD_NUMBER: int
    IMGINFO_FIELD_NUMBER: int
    UPIP_FIELD_NUMBER: int
    UPPORT_FIELD_NUMBER: int
    UPUKEY_FIELD_NUMBER: int
    FILEID_FIELD_NUMBER: int
    UPOFFSET_FIELD_NUMBER: int
    BLOCKSIZE_FIELD_NUMBER: int
    NEWBIGCHAN_FIELD_NUMBER: int
    UPIP6_FIELD_NUMBER: int
    CLIENTIP6_FIELD_NUMBER: int
    DOWNLOADINDEX_FIELD_NUMBER: int
    INFO4BUSI_FIELD_NUMBER: int
    fileId: int
    result: int
    failMsg: bytes
    fileExit: bool
    @property
    def imgInfo(self) -> ImgInfo: ...
    @property
    def upIp(self) -> RepeatedScalarFieldContainer[int]: ...
    @property
    def upPort(self) -> RepeatedScalarFieldContainer[int]: ...
    upUkey: bytes
    fileid: int
    upOffset: int
    blockSize: int
    newBigChan: bool
    @property
    def upIp6(self) -> RepeatedCompositeFieldContainer[IPv6Info]: ...
    clientIp6: bytes
    downloadIndex: bytes
    @property
    def info4Busi(self) -> TryUpInfo4Busi: ...
    def __init__(self,
        *,
        fileId: Optional[int] = ...,
        result: Optional[int] = ...,
        failMsg: Optional[bytes] = ...,
        fileExit: Optional[bool] = ...,
        imgInfo: Optional[ImgInfo] = ...,
        upIp: Optional[Iterable[int]] = ...,
        upPort: Optional[Iterable[int]] = ...,
        upUkey: Optional[bytes] = ...,
        fileid: Optional[int] = ...,
        upOffset: Optional[int] = ...,
        blockSize: Optional[int] = ...,
        newBigChan: Optional[bool] = ...,
        upIp6: Optional[Iterable[IPv6Info]] = ...,
        clientIp6: Optional[bytes] = ...,
        downloadIndex: Optional[bytes] = ...,
        info4Busi: Optional[TryUpInfo4Busi] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["blockSize",b"blockSize","clientIp6",b"clientIp6","downloadIndex",b"downloadIndex","failMsg",b"failMsg","fileExit",b"fileExit","fileId",b"fileId","fileid",b"fileid","imgInfo",b"imgInfo","info4Busi",b"info4Busi","newBigChan",b"newBigChan","result",b"result","upOffset",b"upOffset","upUkey",b"upUkey"]) -> bool: ...
    def ClearField(self, field_name: Literal["blockSize",b"blockSize","clientIp6",b"clientIp6","downloadIndex",b"downloadIndex","failMsg",b"failMsg","fileExit",b"fileExit","fileId",b"fileId","fileid",b"fileid","imgInfo",b"imgInfo","info4Busi",b"info4Busi","newBigChan",b"newBigChan","result",b"result","upIp",b"upIp","upIp6",b"upIp6","upOffset",b"upOffset","upPort",b"upPort","upUkey",b"upUkey"]) -> None: ...

class TryUpInfo4Busi(Message):
    DESCRIPTOR: Descriptor
    DOWNDOMAIN_FIELD_NUMBER: int
    THUMBDOWNURL_FIELD_NUMBER: int
    ORIGINALDOWNURL_FIELD_NUMBER: int
    BIGDOWNURL_FIELD_NUMBER: int
    FILERESID_FIELD_NUMBER: int
    downDomain: bytes
    thumbDownUrl: bytes
    originalDownUrl: bytes
    bigDownUrl: bytes
    fileResid: bytes
    def __init__(self,
        *,
        downDomain: Optional[bytes] = ...,
        thumbDownUrl: Optional[bytes] = ...,
        originalDownUrl: Optional[bytes] = ...,
        bigDownUrl: Optional[bytes] = ...,
        fileResid: Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["bigDownUrl",b"bigDownUrl","downDomain",b"downDomain","fileResid",b"fileResid","originalDownUrl",b"originalDownUrl","thumbDownUrl",b"thumbDownUrl"]) -> bool: ...
    def ClearField(self, field_name: Literal["bigDownUrl",b"bigDownUrl","downDomain",b"downDomain","fileResid",b"fileResid","originalDownUrl",b"originalDownUrl","thumbDownUrl",b"thumbDownUrl"]) -> None: ...

class TryUpPttReq(Message):
    DESCRIPTOR: Descriptor
    GROUPCODE_FIELD_NUMBER: int
    SRCUIN_FIELD_NUMBER: int
    FILEID_FIELD_NUMBER: int
    FILEMD5_FIELD_NUMBER: int
    FILESIZE_FIELD_NUMBER: int
    FILENAME_FIELD_NUMBER: int
    SRCTERM_FIELD_NUMBER: int
    PLATFORMTYPE_FIELD_NUMBER: int
    BUTYPE_FIELD_NUMBER: int
    BUILDVER_FIELD_NUMBER: int
    INNERIP_FIELD_NUMBER: int
    VOICELENGTH_FIELD_NUMBER: int
    NEWUPCHAN_FIELD_NUMBER: int
    CODEC_FIELD_NUMBER: int
    VOICETYPE_FIELD_NUMBER: int
    BUID_FIELD_NUMBER: int
    groupCode: int
    srcUin: int
    fileId: int
    fileMd5: bytes
    fileSize: int
    fileName: bytes
    srcTerm: int
    platformType: int
    buType: int
    buildVer: bytes
    innerIp: int
    voiceLength: int
    newUpChan: bool
    codec: int
    voiceType: int
    buId: int
    def __init__(self,
        *,
        groupCode: Optional[int] = ...,
        srcUin: Optional[int] = ...,
        fileId: Optional[int] = ...,
        fileMd5: Optional[bytes] = ...,
        fileSize: Optional[int] = ...,
        fileName: Optional[bytes] = ...,
        srcTerm: Optional[int] = ...,
        platformType: Optional[int] = ...,
        buType: Optional[int] = ...,
        buildVer: Optional[bytes] = ...,
        innerIp: Optional[int] = ...,
        voiceLength: Optional[int] = ...,
        newUpChan: Optional[bool] = ...,
        codec: Optional[int] = ...,
        voiceType: Optional[int] = ...,
        buId: Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["buId",b"buId","buType",b"buType","buildVer",b"buildVer","codec",b"codec","fileId",b"fileId","fileMd5",b"fileMd5","fileName",b"fileName","fileSize",b"fileSize","groupCode",b"groupCode","innerIp",b"innerIp","newUpChan",b"newUpChan","platformType",b"platformType","srcTerm",b"srcTerm","srcUin",b"srcUin","voiceLength",b"voiceLength","voiceType",b"voiceType"]) -> bool: ...
    def ClearField(self, field_name: Literal["buId",b"buId","buType",b"buType","buildVer",b"buildVer","codec",b"codec","fileId",b"fileId","fileMd5",b"fileMd5","fileName",b"fileName","fileSize",b"fileSize","groupCode",b"groupCode","innerIp",b"innerIp","newUpChan",b"newUpChan","platformType",b"platformType","srcTerm",b"srcTerm","srcUin",b"srcUin","voiceLength",b"voiceLength","voiceType",b"voiceType"]) -> None: ...

class TryUpPttRsp(Message):
    DESCRIPTOR: Descriptor
    FILEID_FIELD_NUMBER: int
    RESULT_FIELD_NUMBER: int
    FAILMSG_FIELD_NUMBER: int
    FILEEXIT_FIELD_NUMBER: int
    UPIP_FIELD_NUMBER: int
    UPPORT_FIELD_NUMBER: int
    UPUKEY_FIELD_NUMBER: int
    FILEID_FIELD_NUMBER: int
    UPOFFSET_FIELD_NUMBER: int
    BLOCKSIZE_FIELD_NUMBER: int
    FILEKEY_FIELD_NUMBER: int
    CHANNELTYPE_FIELD_NUMBER: int
    UPIP6_FIELD_NUMBER: int
    CLIENTIP6_FIELD_NUMBER: int
    fileId: int
    result: int
    failMsg: bytes
    fileExit: bool
    @property
    def upIp(self) -> RepeatedScalarFieldContainer[int]: ...
    @property
    def upPort(self) -> RepeatedScalarFieldContainer[int]: ...
    upUkey: bytes
    fileid: int
    upOffset: int
    blockSize: int
    fileKey: bytes
    channelType: int
    @property
    def upIp6(self) -> RepeatedCompositeFieldContainer[IPv6Info]: ...
    clientIp6: bytes
    def __init__(self,
        *,
        fileId: Optional[int] = ...,
        result: Optional[int] = ...,
        failMsg: Optional[bytes] = ...,
        fileExit: Optional[bool] = ...,
        upIp: Optional[Iterable[int]] = ...,
        upPort: Optional[Iterable[int]] = ...,
        upUkey: Optional[bytes] = ...,
        fileid: Optional[int] = ...,
        upOffset: Optional[int] = ...,
        blockSize: Optional[int] = ...,
        fileKey: Optional[bytes] = ...,
        channelType: Optional[int] = ...,
        upIp6: Optional[Iterable[IPv6Info]] = ...,
        clientIp6: Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["blockSize",b"blockSize","channelType",b"channelType","clientIp6",b"clientIp6","failMsg",b"failMsg","fileExit",b"fileExit","fileId",b"fileId","fileKey",b"fileKey","fileid",b"fileid","result",b"result","upOffset",b"upOffset","upUkey",b"upUkey"]) -> bool: ...
    def ClearField(self, field_name: Literal["blockSize",b"blockSize","channelType",b"channelType","clientIp6",b"clientIp6","failMsg",b"failMsg","fileExit",b"fileExit","fileId",b"fileId","fileKey",b"fileKey","fileid",b"fileid","result",b"result","upIp",b"upIp","upIp6",b"upIp6","upOffset",b"upOffset","upPort",b"upPort","upUkey",b"upUkey"]) -> None: ...
